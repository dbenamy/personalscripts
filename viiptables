#!/usr/bin/env bash
                                                                                                   


# fail on any errors (same as set -e)
set -o errexit




if [[ "$1" == "--restore-after-five-minutes" ]]
then
    sleep 5m
    iptables-restore < $2
    exit 0
elif [[ "$1" == "-h"     ]] ||
     [[ "$1" == "--help" ]]
     
echo  "viiptables"
echo  "This script lets you edit iptables, and restores their original settings after five minutes if no action is taken."
echo  "This is an example iptables file, with descriptions."
echo  "See https://fedoraproject.org/wiki/How_to_edit_iptables_rules?rd=User_talk:Rforlot"
echo  ""
echo  "# Generated by iptables-save v1.4.12 on Wed Dec  7 20:22:39 2011  "                                                                                
echo  "*filter <--------------------------------------------------------- Specify the table of the next rules"                                            
echo  ":INPUT DROP [157:36334] <----------------------------------------- This is the three chain belong to filter table, then the policy of the chain"   
echo  ":FORWARD ACCEPT [0:0] <------------------------------------------- and between brackets [<packet-counter>:<byte-counter>] numbers is for"          
echo  ":OUTPUT ACCEPT [48876:76493439] <--------------------------------- debug/informations purpose only. Leave them at their current value. "           
echo  "-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT <--------- A rule. "                                                                       
echo  "-A INPUT -p icmp -j ACCEPT <-------------------------------------- You just have to take all arguments"                                            
echo  "-A INPUT -i lo -j ACCEPT <---------------------------------------- of an iptables command."                                                        
echo  "-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT "                                                                                 
echo  "COMMIT <---------------------------------------------------------- Needed at each end of table definition. Commit rules in that table."             
echo  "# Completed on Wed Dec  7 20:22:39 2011"        

exit 0
     

fi



if [[ $EUID -ne 0 ]]
then
   echo "This script must be run as root" 1>&2
   exit 1
fi

if [[ -z "$(which $0)" ]]
then
    echo "$0 must be in path." 1>&2
    exit 2
fi


## get an editor

if [ -z "$EDITOR" ]
then
    EDITOR="$(which vim || which nano || which vi)"
fi

if [ -z "$EDITOR" ]
then
    echo "ERROR: \$EDITOR not set." 1>&2
    exit 3
fi


TMP_TABLE_ORIGINAL="$(mktemp /etc/iptables-original.XXXXXX)"
TMP_TABLE_EDIT="$(mktemp /etc/iptables-edit.XXXXXX)"


iptables-save > $TMP_TABLE_ORIGINAL
iptables-save > $TMP_TABLE_EDIT

HASH_PRE_EDIT="$(shasum $TMP_TABLE_EDIT)"

$EDITOR $TMP_TABLE_EDIT

HASH_POST_EDIT="$(shasum $TMP_TABLE_EDIT)"


if [[ "$HASH_PRE_EDIT" == "$HASH_POST_EDIT" ]]
then
    echo "Temporary iptables file $TMP_TABLE_EDIT not changed.  Exiting."
    exit 0
else
    echo "Temporary iptables file $TMP_TABLE_EDIT successfully installed."
fi


iptables-restore < $TMP_TABLE_EDIT


nohup $0 --restore-after-five-minutes $TMP_TABLE_ORIGINAL &
PID="$!"


echo "Tables will be restored in five minutes."
echo "Kill PID $PID to keep this from happening."


exit 0
