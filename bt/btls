#!/usr/bin/env bash
#transmission-remote snake --auth admin:snake --list

# no arguments: list all torrents
# torrent ids: list files for those ids
# --all-files: list files for all ids
# --bare: show only the files, not the other fluff

if [[ "$1" == "--help" ]]
then
    echo -e "$(basename $0)"
    echo -e "    Peter Swire - swirepe.com"
    echo -e "    Part of a suite of command line tools for manipulating transmission."
    $0 --help-oneline
    echo -e "$(basename $0) <ids>\tList files for torrents with these ids."
    echo -e "$(basename $0) --all-files\tList files for all torrents."
    echo -e "$(basename $0) --bare\tShow only files, nothing else."
    exit 0    
fi

if [[ "$1" == "--help-oneline" ]]
then
    echo -e "$(basename $0)\tList all torrents."
    exit 0
fi



if [ -e $HOME/.btrc ]
then
    source $HOME/.btrc
else
    echo "Using defaults for snake." > /dev/stderr
    BT_HOST="snake"
    BT_AUTH="admin:snake"
fi


function bare {
    TORRENT_ID="$1"
    
    if [[ "$TORRENT_ID"  == "-" ]]
    then
        return
    fi
    
    NAME_COL_OFFSET=$(transmission-remote $BT_HOST --auth $BT_AUTH  -t $TORRENT_ID --files  | grep Name | sed 's/Name.*//' | wc -c)
    
    while read remote_file
    do
			echo $remote_file    
    done < <(transmission-remote $BT_HOST --auth $BT_AUTH  -t $TORRENT_ID --files  | tail -n +3 | cut -c"$NAME_COL_OFFSET"- )
    
}


BARE="false"
ALL_FILES="false"
if [[ "$1" == "--bare" ]] || [[ "$2" == "--bare" ]]
then
    BARE="true"
fi

if [[ "$1" == "--all-files" ]] || [[ "$2" == "--all-files" ]]
then
    ALL_FILES="true"
fi


if [[ -z "$1" ]]
then
	transmission-remote $BT_HOST --auth $BT_AUTH --list
elif [[ "$ALL_FILES" == "true" ]]
then
    if [[ "$BARE" == "true" ]]
    then
        for torrent in $(btid)
        do
            bare $torrent
        done
    else
        for torrent in $(btid)
        do
            transmission-remote $BT_HOST --auth $BT_AUTH -t $torrent --files
        done
    fi
        
else
    if [[ "$BARE" == "true" ]]
    then
        for torrent in $@
        do
            bare $torrent
        done
    else
        for torrent in $@
        do
            transmission-remote $BT_HOST --auth $BT_AUTH -t $torrent --files
        done
    fi
fi
