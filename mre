#!/usr/bin/env python


import imaplib
import email
import string
import ConfigParser
import sys
# http://stackoverflow.com/questions/7314942/python-imaplib-to-get-gmail-inbox-subjects-titles-and-sender-name

def getLabel(boxList):
    for box in boxList:
        if "[Gmail]/Important" in box:
            return "[Gmail]/Important"
            
    return "inbox"


def fewEmails(user, password, numEmails=5):
    mail = imaplib.IMAP4_SSL('imap.gmail.com')
    mail.login(user, password)


    label = getLabel( mail.list()[-1] )
    mail.select(label) # connect to inbox.
    
    typ, data = mail.search(None, 'ALL')
    ids = data[0]
    id_list = ids.split()
    #get the most recent email id
    latest_email_id = int( id_list[-1] )
    
    #iterate through 15 messages in decending order starting with latest_email_id
    #the '-1' dictates reverse looping order
    for i in range( latest_email_id, latest_email_id-numEmails, -1 ):
        try:
            typ, data = mail.fetch( i, '(RFC822)' )
            
            for response_part in data:
               if isinstance(response_part, tuple):
                   msg = email.message_from_string(response_part[1])
                   varSubject = msg['subject']
                   varFrom = msg['from']
                   varTo = msg['to']
            
            #remove the brackets around the sender email address
            varFrom = varFrom.replace('<', '')
            varFrom = varFrom.replace('>', '')
            
            varTo = varTo.replace('<', '')
            varTo = varTo.replace('>', '')
            
            #add ellipsis (...) if subject length is greater than 50 characters
            if varSubject == None:
                varSubject = "(no subject)"
                
            if len( varSubject ) > 50:
                varSubject = varSubject[0:47] + '...'
               
            yield varTo.split()[-1], varFrom.split()[-1], varSubject
        except:
            pass
    
       
       
       
    mail.close()
    mail.logout()



def displayEmails(username, password, section, numEmails):
    for (emailTo, emailFrom, emailSubject) in fewEmails(username, password, numEmails):
        print string.ljust(section, 12), string.ljust(emailTo, 35), string.ljust(emailFrom, 35), string.ljust(emailSubject, 50)
        
        
def getEmailsFromConfig(configFile="~/.mre.config"):
    config = ConfigParser.RawConfigParser()
    config.read(configFile)
    
    for section in config.sections():
        username = config.get(section, "email")
        password = config.get(section, "password")
    
        try:
            numEmails = int(config.get(section, "numEmails"))
        except:
            numEmails = 5

        dispSection = "[" + string.ljust(section[0:10], 10) + "]"
        displayEmails(username, password, dispSection, numEmails)
        
    
    
if __name__ == "__main__":
    if len(sys.argv) > 1:
        config = sys.argv[1]
        getEmailsFromConfig(config)
    else:
        getEmailsFromConfig()
